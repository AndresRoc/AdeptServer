.PROGRAM newlab()
.END

.PROGRAM movez()

	ATTACH ()
	MOVE HERE:TRANS(0,0,5,0,0,0)
	BREAK


.END

.PROGRAM play()

	CALL initialize()

	MOVE #orig
	BREAK

	SPEED 80
	CALL create_array(delta_j[], -90, 60, 30, -90, 0, 0)
	CALL move_rel_joints(delta_j[])
	BREAK

	;MOVE HERE:TRANS(0,0,185,0,0,0)

	SPEED 100
	TYPE SPEED(2), SPEED(1)
	MOVE HERE:TRANS(0,0,-100,0,0,0)
	BREAK

	SPEED 50
	TYPE SPEED(2), SPEED(1)
	MOVE HERE:TRANS(0,0,-100,0,0,0)
	BREAK

	SPEED 25
	TYPE SPEED(2), SPEED(1)
	MOVE HERE:TRANS(0,0,-100,0,0,0)
	BREAK

	SPEED 5
	TYPE SPEED(2), SPEED(1)
	MOVE HERE:TRANS(0,0,-100,0,0,0)
	BREAK

	SPEED 5
	MOVE #orig
	BREAK




.END

.PROGRAM defvars()

	SET #orig = #PPOINT(0,-90,180,0,90,0)

.END

.PROGRAM pspeed()

	TYPE SPEED(2)
.END

.PROGRAM demo_stringarr()

	AUTO $q[50]

	$q[0] = "Hello"
	$q[1] = "world"
	$q[2] = "!"

	FOR i = 0 TO 1
	    TYPE $q[i]
	END

.END

.PROGRAM demo_delim()


	AUTO $delim, $s, n_tokens

	CALL get_delimiter($delim)
	$s = "First"+$delim+"second"+$delim

	CALL split_string($s, $delim, $tokens[], n_tokens)

	FOR i = 0 TO n_tokens-1
	    TYPE $tokens[i]
	END


.END

